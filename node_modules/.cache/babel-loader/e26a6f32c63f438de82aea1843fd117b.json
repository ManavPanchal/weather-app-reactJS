{"ast":null,"code":"var _jsxFileName = \"/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./sass/main.css\";\nimport WeatherData from \"./WeatherData\";\nimport { SuggestionFilter } from \"./sugestionFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Weather = () => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [cityName, setCityName] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const llApiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}`;\n  const ApiId = '9e4cdd6c628c4cbdcacc25b6df594009';\n\n  const getValue = event => {\n    setInput(event.target.value);\n    setSuggestions(SuggestionFilter(event.target.value));\n    if (event.target.value = \"\") setSuggestions([]);\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(positions => {\n      setLatitude(positions.coords.latitude);\n      setLongitude(positions.coords.longitude);\n    });\n    console.log(new Date(1649764910 * 1000 + obj.timezone * 1000));\n  }, []);\n  useEffect(() => {\n    if (latitude != null) {\n      getllApi();\n    }\n  }, [latitude, longitude]);\n  var t_sugg = 0;\n\n  const getllApi = async () => {\n    const get = await fetch(`${llApiUrl}&appid=${ApiId}`);\n    const res = await get.json(); // const searchcity = (name) =>{\n    //     setInput(name)\n    // }\n\n    if (res != null) {\n      setInput(\"searching for Location...\");\n      setInput(res.name);\n      setCityName(res.name);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_wrapper flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search_wrapper flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search_bar_wrapper flex-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search_bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter City Name\",\n              onChange: getValue,\n              value: input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"client_location_btn\",\n              onClick: () => {\n                latitude == null ? alert(\"please enable share location to get current location\") : getllApi();\n              },\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-location-crosshairs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestion_section\",\n              children: input != \"\" && suggestions.map((elem, index) => {\n                if (t_sugg < 4) {\n                  t_sugg++;\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"suggestions\",\n                    onClick: () => {\n                      setInput(`${elem.name}, ${elem.state}`);\n                      setCityName(elem.name);\n                      setSuggestions([]);\n                    },\n                    children: [elem.name, \", \", elem.state]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 41\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search_btn flex-center\",\n          onClick: () => setCityName(input),\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-magnifying-glass-location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 103\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"search_txt\",\n            children: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 161\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), cityName !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_wrapper flex-center\",\n        children: /*#__PURE__*/_jsxDEV(WeatherData, {\n          city: cityName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_wrapper flex-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no_data\",\n          children: \" No Data is Available For The City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Weather, \"VnS5w0Jadb8S90Ae2g6JIxZVSw4=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/Weather.js"],"names":["React","useState","useEffect","WeatherData","SuggestionFilter","Weather","input","setInput","latitude","setLatitude","longitude","setLongitude","cityName","setCityName","suggestions","setSuggestions","llApiUrl","ApiId","getValue","event","target","value","navigator","geolocation","getCurrentPosition","positions","coords","console","log","Date","obj","timezone","getllApi","t_sugg","get","fetch","res","json","name","alert","map","elem","index","state"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./sass/main.css\";\nimport WeatherData from \"./WeatherData\";\nimport { SuggestionFilter } from \"./sugestionFilter\";\n\nconst Weather =() =>{\n    \n    const [input , setInput] = useState(\"\");\n    const [latitude , setLatitude] = useState(null);\n    const [longitude, setLongitude] = useState(null);\n    const [cityName , setCityName] = useState(\"\");\n    const [suggestions, setSuggestions] = useState([]);\n    \n    const llApiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}`\n    const ApiId = '9e4cdd6c628c4cbdcacc25b6df594009';\n    \n    const getValue = (event) =>{\n        setInput(event.target.value);\n        setSuggestions(SuggestionFilter(event.target.value));\n        if(event.target.value = \"\") setSuggestions([]);\n    }\n    useEffect(()=>{\n        navigator.geolocation.getCurrentPosition((positions)=>{\n            setLatitude(positions.coords.latitude);\n            setLongitude(positions.coords.longitude);\n        })\n        console.log(new Date(1649764910*1000+(obj.timezone*1000)))\n    },[])\n\n    useEffect(()=>{\n        if(latitude != null){\n            getllApi();\n        }\n    },[latitude,longitude])\n    var t_sugg = 0;\n    const getllApi = async ()=>{\n        const get = await fetch(`${llApiUrl}&appid=${ApiId}`);\n        const res = await get.json();\n        // const searchcity = (name) =>{\n        //     setInput(name)\n        // }\n        if(res != null){\n            setInput(\"searching for Location...\");\n            setInput(res.name);\n            setCityName(res.name);\n        }\n    }\n    return(\n        <>\n            <div className=\"container_wrapper flex\">\n                <div className=\"search_wrapper flex\">\n                    <div className=\"search_bar_wrapper flex-center\">\n                        <div className=\"search_bar\">\n                            <input \n                                type=\"text\"\n                                placeholder=\"Enter City Name\"\n                                onChange={getValue}\n                                value={input}\n                            />\n                            <button className=\"client_location_btn\" onClick={()=>{\n                                latitude == null ? alert(\"please enable share location to get current location\") : getllApi()\n                            }}> <i className=\"fa-solid fa-location-crosshairs\"></i> </button>\n                        <div className=\"suggestion_section\">\n                            {input != \"\" && suggestions.map((elem,index) =>{\n                                    if(t_sugg < 4){\n                                    t_sugg++;\n                                    return(\n                                        <p className=\"suggestions\" key={index} onClick={()=>{\n                                            setInput(`${elem.name}, ${elem.state}`)\n                                            setCityName(elem.name);\n                                            setSuggestions([]);\n                                        }}>{elem.name}, {elem.state}</p>\n                                    )\n                                    }\n\n                            })}\n                        </div>\n                        </div>\n                    </div>\n                        <button className=\"search_btn flex-center\" onClick={()=> setCityName(input)}> <i className=\"fa-solid fa-magnifying-glass-location\"></i> <p className=\"search_txt\">search</p></button>\n                </div>\n                { cityName !== \"\" ? (\n                    <div className=\"main_wrapper flex-center\">\n                        <WeatherData city={cityName} />\n                    </div>\n                ):(\n                    <div className=\"main_wrapper flex-center\">\n                        <p className=\"no_data\"> No Data is Available For The City</p>\n                    </div>\n                )}\n            </div>\n        </>\n    )\n}\nexport default Weather;\n\n"]},"metadata":{},"sourceType":"module"}