{"ast":null,"code":"var _jsxFileName = \"/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/Weather.js\",\n    _s = $RefreshSig$();\n\nimport { getValue } from \"@testing-library/user-event/dist/utils\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./weather.scss\";\nimport WeatherData from \"./WeatherData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Weather = () => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [latitude, setLatitude] = useState();\n  const [longitude, setLongitude] = useState();\n  const [cityName, setCityName] = useState(\"\");\n  const llApiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}`;\n  const ApiId = '9e4cdd6c628c4cbdcacc25b6df594009';\n\n  const getValue = event => {\n    setInput(event.target.value);\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(positions => {\n      setLatitude(positions.coords.latitude);\n      setLongitude(positions.coords.longitude);\n    });\n  }, []);\n\n  const getllApi = async () => {\n    const get = await fetch(`${llApiUrl}&appid=${ApiId}`);\n    const res = await get.json();\n\n    searchcity = name => {\n      setInput(name);\n    };\n\n    if (res != null) {\n      setInput(\"searching for Location...\");\n      searchcity(res.name);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search_wrapper flex-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search_bar_wrapper flex-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search_bar flex-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter City Name\",\n              onChange: getValue,\n              value: input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"client_location_btn\",\n              onClick: getllApi,\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-location-crosshairs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 89\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion_section\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search_btn\",\n          onClick: () => setCityName(input),\n          children: \" Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), cityName !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_wrapper flex-center\",\n        children: /*#__PURE__*/_jsxDEV(WeatherData, {\n          city: cityName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_wrapper flex-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no_data\",\n          children: \" No Data is Available For The City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Weather, \"b5/0GT0xoLTgfLeEPGv8f8oL2Mc=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/Weather.js"],"names":["getValue","React","useState","useEffect","WeatherData","Weather","input","setInput","latitude","setLatitude","longitude","setLongitude","cityName","setCityName","llApiUrl","ApiId","event","target","value","navigator","geolocation","getCurrentPosition","positions","coords","getllApi","get","fetch","res","json","searchcity","name"],"mappings":"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","sourcesContent":["import { getValue } from \"@testing-library/user-event/dist/utils\";\nimport React, {useState, useEffect} from \"react\";\nimport \"./weather.scss\";\nimport WeatherData from \"./WeatherData\";\n\nconst Weather =() =>{\n    \n    const [input , setInput] = useState(\"\");\n    const [latitude , setLatitude] = useState();\n    const [longitude, setLongitude] = useState();\n    const [cityName , setCityName] = useState(\"\");\n\n    const llApiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}`\n    const ApiId = '9e4cdd6c628c4cbdcacc25b6df594009';\n    \n    const getValue = (event) =>{\n        setInput(event.target.value);\n    }\n    useEffect(()=>{\n        navigator.geolocation.getCurrentPosition((positions)=>{\n            setLatitude(positions.coords.latitude);\n            setLongitude(positions.coords.longitude);\n        })\n    },[])\n\n    const getllApi = async ()=>{\n        const get = await fetch(`${llApiUrl}&appid=${ApiId}`);\n        const res = await get.json();\n        searchcity = (name) =>{\n            setInput(name)\n        }\n        if(res != null){\n            setInput(\"searching for Location...\");\n            searchcity(res.name)\n        }\n    }\n    return(\n        <>\n            <div className=\"header_wrapper\">\n                <div className=\"search_wrapper flex-center\">\n                    <div className=\"search_bar_wrapper flex-center\">\n                        <div className=\"search_bar flex-center\">\n                            <input \n                                type=\"text\"\n                                placeholder=\"Enter City Name\"\n                                onChange={getValue}\n                                value={input}\n                            />\n                            <button className=\"client_location_btn\" onClick={getllApi}> <i className=\"fa-solid fa-location-crosshairs\"></i> </button>\n                        </div>\n                        <div className=\"suggestion_section\">\n                        </div>\n                    </div>\n                        <button className=\"search_btn\" onClick={()=> setCityName(input)}> Search</button>\n                </div>\n                { cityName !== \"\" ? (\n                    <div className=\"main_wrapper flex-center\">\n                        <WeatherData city={cityName} />\n                    </div>\n                ):(\n                    <div className=\"main_wrapper flex-center\">\n                        <p className=\"no_data\"> No Data is Available For The City</p>\n                    </div>\n                )}\n            </div>\n        </>\n    )\n}\nexport default Weather;"]},"metadata":{},"sourceType":"module"}