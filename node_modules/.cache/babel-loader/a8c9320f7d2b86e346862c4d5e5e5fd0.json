{"ast":null,"code":"var _jsxFileName = \"/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/WeatherData.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./sass/main.css\";\nimport WeatherForecast from \"./WeatherForecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherData = props => {\n  _s();\n\n  const [searchedCity, setSearchedCity] = useState(props.city);\n  const [crntCityLat, setCrntCityLat] = useState(0);\n  const [crntCityLon, setCrntCityLon] = useState(0);\n  const [temprature, setTemprature] = useState([]);\n  const [foreCastData, setForeCastData] = useState([]);\n  const [weather, setWeather] = useState(); // const weath_map = () =>{\n  //     console.log(weather);\n  //     document.body.style.backgroundImage = \"url('/public/image/foggy_d.jpeg');\"\n  // }\n\n  useEffect(() => {\n    const callApi = async () => {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${props.city}&units=metric&appid=9e4cdd6c628c4cbdcacc25b6df594009`);\n      const result = await response.json();\n      setSearchedCity(result.name);\n      setTemprature(result.main);\n      console.log(result);\n      setCrntCityLat(result.coord.lat);\n      setCrntCityLon(result.coord.lon);\n      setWeather(result.weather[0].description); // Background(result.weather[0].description)\n    };\n\n    callApi();\n  }, [props]);\n  useEffect(() => {\n    const callForcastApi = async () => {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${crntCityLat}&lon=${crntCityLon}&units=metric&appid=9e4cdd6c628c4cbdcacc25b6df594009`);\n      const result = await response.json();\n      setForeCastData(result.hourly);\n    };\n\n    callForcastApi(); // weath_map();\n  }, [crntCityLat, crntCityLon]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [searchedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"citi_info_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crnt_city flex-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-location-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", searchedCity, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crnt_city_temp flex-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", parseInt(temprature.temp), \"\\xB0 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crnt_city_weather\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", weather, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast_data flex\",\n        children: [foreCastData != null && foreCastData.map((elem, index) => {\n          return /*#__PURE__*/_jsxDEV(WeatherForecast, {\n            temp: elem.temp,\n            count: index\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 31\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_footer\",\n          children: \" *48 hours forecast \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 32\n    }, this), !searchedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_wrapper flex-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no_data\",\n        children: \" No Data is Available For The City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WeatherData, \"XmFfHj2dl3G8oxaQVPF3dI933iQ=\");\n\n_c = WeatherData;\nexport default WeatherData;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherData\");","map":{"version":3,"sources":["/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/WeatherData.jsx"],"names":["React","useEffect","useState","WeatherForecast","WeatherData","props","searchedCity","setSearchedCity","city","crntCityLat","setCrntCityLat","crntCityLon","setCrntCityLon","temprature","setTemprature","foreCastData","setForeCastData","weather","setWeather","callApi","response","fetch","result","json","name","main","console","log","coord","lat","lon","description","callForcastApi","hourly","parseInt","temp","map","elem","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AAEA,MAAMC,WAAW,GAAKC,KAAD,IACrB;AAAA;;AACI,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAACG,KAAK,CAACG,IAAP,CAAhD;AACA,QAAM,CAACC,WAAD,EAAeC,cAAf,IAAiCR,QAAQ,CAAC,CAAD,CAA/C;AACA,QAAM,CAACS,WAAD,EAAeC,cAAf,IAAiCV,QAAQ,CAAC,CAAD,CAA/C;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACe,OAAD,EAAWC,UAAX,IAAyBhB,QAAQ,EAAvC,CANJ,CAQI;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMkB,OAAO,GAAG,YAAU;AACtB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qDAAoDhB,KAAK,CAACG,IAAK,sDAAjE,CAA5B;AACA,YAAMc,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAhB,MAAAA,eAAe,CAACe,MAAM,CAACE,IAAR,CAAf;AACAV,MAAAA,aAAa,CAACQ,MAAM,CAACG,IAAR,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACAZ,MAAAA,cAAc,CAACY,MAAM,CAACM,KAAP,CAAaC,GAAd,CAAd;AACAjB,MAAAA,cAAc,CAACU,MAAM,CAACM,KAAP,CAAaE,GAAd,CAAd;AACAZ,MAAAA,UAAU,CAACI,MAAM,CAACL,OAAP,CAAe,CAAf,EAAkBc,WAAnB,CAAV,CARsB,CAStB;AACH,KAVD;;AAWAZ,IAAAA,OAAO;AACV,GAbQ,EAaP,CAACd,KAAD,CAbO,CAAT;AAgBAJ,EAAAA,SAAS,CAAC,MAAI;AACV,UAAM+B,cAAc,GAAG,YAAY;AAC/B,YAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,uDAAsDZ,WAAY,QAAOE,WAAY,sDAAvF,CAA5B;AACA,YAAMW,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAP,MAAAA,eAAe,CAACM,MAAM,CAACW,MAAR,CAAf;AACH,KAJD;;AAKAD,IAAAA,cAAc,GANJ,CAOV;AACH,GARQ,EAQP,CAACvB,WAAD,EAAaE,WAAb,CARO,CAAT;AAWA,sBACI;AAAA,eACML,YAAY,iBAAK;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACf;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACQ;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADR,eAEQ;AAAA,0BAAMA,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cADe,eAKf;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACI;AAAA,0BAAK4B,QAAQ,CAACrB,UAAU,CAACsB,IAAZ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALe,eAQf;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACI;AAAA,0BAAKlB,OAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARe,eAWf;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,mBACKF,YAAY,IAAG,IAAf,IAAuBA,YAAY,CAACqB,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAe;AACrD,8BAAO,QAAC,eAAD;AAA8B,YAAA,IAAI,EAAID,IAAI,CAACF,IAA3C;AAAiD,YAAA,KAAK,EAAEG;AAAxD,aAAuBA,KAAvB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACF,SAFuB,CAD5B,eAII;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXe;AAAA;AAAA;AAAA;AAAA;AAAA,YADvB,EAmBK,CAAChC,YAAD,iBACG;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,6BACI;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApBR;AAAA,kBADJ;AA2BH,CApED;;GAAMF,W;;KAAAA,W;AAsEN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./sass/main.css\";\nimport WeatherForecast from \"./WeatherForecast\";\n\nconst WeatherData  = (props) =>\n{\n    const [searchedCity, setSearchedCity] = useState(props.city);\n    const [crntCityLat , setCrntCityLat] = useState(0);\n    const [crntCityLon , setCrntCityLon] = useState(0);\n    const [temprature, setTemprature] = useState([]);\n    const [foreCastData, setForeCastData] = useState([]);\n    const [weather , setWeather] = useState();\n\n    // const weath_map = () =>{\n    //     console.log(weather);\n    //     document.body.style.backgroundImage = \"url('/public/image/foggy_d.jpeg');\"\n    // }\n\n    useEffect(()=>{\n        const callApi = async ()=>{\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${props.city}&units=metric&appid=9e4cdd6c628c4cbdcacc25b6df594009`);\n            const result = await response.json();\n            setSearchedCity(result.name);\n            setTemprature(result.main);\n            console.log(result)\n            setCrntCityLat(result.coord.lat);\n            setCrntCityLon(result.coord.lon);\n            setWeather(result.weather[0].description);\n            // Background(result.weather[0].description)\n        }\n        callApi();\n    },[props]);\n\n\n    useEffect(()=>{\n        const callForcastApi = async () => {\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${crntCityLat}&lon=${crntCityLon}&units=metric&appid=9e4cdd6c628c4cbdcacc25b6df594009`)\n            const result = await response.json();\n            setForeCastData(result.hourly);\n        }\n        callForcastApi();\n        // weath_map();\n    },[crntCityLat,crntCityLon]);\n\n\n    return(\n        <>\n            { searchedCity && (<div className=\"citi_info_wrapper\">\n                <div className=\"crnt_city flex-center\">\n                        <i className=\"fa-solid fa-location-dot\"></i>\n                        <h1> {searchedCity} </h1>\n                </div>\n                <div className=\"crnt_city_temp flex-center\">\n                    <p> {parseInt(temprature.temp)}° </p>\n                </div>\n                <div className=\"crnt_city_weather\">\n                    <p> {weather} </p>\n                </div>\n                <div className=\"forecast_data flex\">\n                    {foreCastData !=null && foreCastData.map((elem, index)=>{\n                       return <WeatherForecast  key={index} temp = {elem.temp} count={index}/>\n                    })}\n                    <div className=\"forecast_footer\"> *48 hours forecast </div>\n                </div>\n            </div>)}\n            {!searchedCity && (\n                <div className=\"main_wrapper flex-center\">\n                    <p className=\"no_data\"> No Data is Available For The City</p>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default WeatherData;"]},"metadata":{},"sourceType":"module"}