{"ast":null,"code":"var _jsxFileName = \"/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/WeatherData.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./weather.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherData = props => {\n  _s();\n\n  const [searchedCity, setSearchedCity] = useState(\"\");\n  const [crntCityLat, setCrntCityLat] = useState(0);\n  const [crntCityLon, setCrntCityLon] = useState(0);\n  const [temprature, setTemprature] = useState([]);\n  const [hours, setHours] = useState(new Date().getHours()); // const [foreCastData, setForeCastData] = useState([]);\n  // const [hours , sethours ] \n\n  useEffect(() => {\n    const callApi = async () => {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${props.city}&units=metric&appid=9e4cdd6c628c4cbdcacc25b6df594009`);\n      const result = await response.json();\n      setSearchedCity(result.name);\n      setTemprature(result.main);\n      setCrntCityLat(result.coord.lat);\n      setCrntCityLon(result.coord.lon);\n    };\n\n    callApi();\n  }, [props]);\n  useEffect(() => {\n    const callForcastApi = async () => {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${crntCityLat}&lon=${crntCityLon}&units=metric&appid=9e4cdd6c628c4cbdcacc25b6df594009`);\n      const result = await response.json();\n      console.log(result.hourly);\n    };\n\n    callForcastApi();\n  }, [crntCityLat], [crntCityLon]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"citi_info_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crnt_city flex-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-location-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", props.city, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crnt_city_temp flex-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", temprature.temp, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast_data flex\",\n        children: foreCastData != null && foreCastData.map((elem, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hourly_data\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", elem.temp, \" \", hours, \" \"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(WeatherData, \"xI5MlQUxFQS7IuNVrJcse/C4Xp0=\");\n\n_c = WeatherData;\nexport default WeatherData;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherData\");","map":{"version":3,"sources":["/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/WeatherData.jsx"],"names":["React","useEffect","useState","WeatherData","props","searchedCity","setSearchedCity","crntCityLat","setCrntCityLat","crntCityLon","setCrntCityLon","temprature","setTemprature","hours","setHours","Date","getHours","callApi","response","fetch","city","result","json","name","main","coord","lat","lon","callForcastApi","console","log","hourly","temp","foreCastData","map","elem","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAQ,gBAAR;;;;AAEA,MAAMC,WAAW,GAAKC,KAAD,IACrB;AAAA;;AACI,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,WAAD,EAAeC,cAAf,IAAiCN,QAAQ,CAAC,CAAD,CAA/C;AACA,QAAM,CAACO,WAAD,EAAeC,cAAf,IAAiCR,QAAQ,CAAC,CAAD,CAA/C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,KAAD,EAASC,QAAT,IAAqBZ,QAAQ,CAAC,IAAIa,IAAJ,GAAWC,QAAX,EAAD,CAAnC,CALJ,CAMI;AACA;;AACAf,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMgB,OAAO,GAAG,YAAU;AACtB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qDAAoDf,KAAK,CAACgB,IAAK,sDAAjE,CAA5B;AACA,YAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAArB;AACAhB,MAAAA,eAAe,CAACe,MAAM,CAACE,IAAR,CAAf;AACAX,MAAAA,aAAa,CAACS,MAAM,CAACG,IAAR,CAAb;AACAhB,MAAAA,cAAc,CAACa,MAAM,CAACI,KAAP,CAAaC,GAAd,CAAd;AACAhB,MAAAA,cAAc,CAACW,MAAM,CAACI,KAAP,CAAaE,GAAd,CAAd;AACH,KAPD;;AAQAV,IAAAA,OAAO;AACV,GAVQ,EAUP,CAACb,KAAD,CAVO,CAAT;AAWAH,EAAAA,SAAS,CAAC,MAAI;AACV,UAAM2B,cAAc,GAAG,YAAY;AAC/B,YAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,uDAAsDZ,WAAY,QAAOE,WAAY,sDAAvF,CAA5B;AACA,YAAMY,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAArB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACU,MAAnB;AACH,KAJD;;AAKAH,IAAAA,cAAc;AACjB,GAPQ,EAOP,CAACrB,WAAD,CAPO,EAOO,CAACE,WAAD,CAPP,CAAT;AAQA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACQ;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADR,eAEI;AAAA,0BAAML,KAAK,CAACgB,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACI;AAAA,0BAAKT,UAAU,CAACqB,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACKC,YAAY,IAAG,IAAf,IAAuBA,YAAY,CAACC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAe;AACpD,8BACI;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACI;AAAA,gCAAiBD,IAAI,CAACH,IAAtB,OAA6BnB,KAA7B;AAAA,iBAAQuB,KAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,2BADJ;AAOH,SARuB;AAD5B;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAwBH,CApDD;;GAAMjC,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport  \"./weather.scss\";\n\nconst WeatherData  = (props) =>\n{\n    const [searchedCity, setSearchedCity] = useState(\"\");\n    const [crntCityLat , setCrntCityLat] = useState(0);\n    const [crntCityLon , setCrntCityLon] = useState(0);\n    const [temprature, setTemprature] = useState([]);\n    const [hours , setHours] = useState(new Date().getHours());\n    // const [foreCastData, setForeCastData] = useState([]);\n    // const [hours , sethours ] \n    useEffect(()=>{\n        const callApi = async ()=>{\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${props.city}&units=metric&appid=9e4cdd6c628c4cbdcacc25b6df594009`);\n            const result = await response.json();\n            setSearchedCity(result.name);\n            setTemprature(result.main);\n            setCrntCityLat(result.coord.lat);\n            setCrntCityLon(result.coord.lon)\n        }\n        callApi();\n    },[props]);\n    useEffect(()=>{\n        const callForcastApi = async () => {\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${crntCityLat}&lon=${crntCityLon}&units=metric&appid=9e4cdd6c628c4cbdcacc25b6df594009`)\n            const result = await response.json();\n            console.log(result.hourly);\n        }\n        callForcastApi();\n    },[crntCityLat],[crntCityLon]);\n    return(\n        <>\n            <div className=\"citi_info_wrapper\">\n                <div className=\"crnt_city flex-center\">\n                        <i className=\"fa-solid fa-location-dot\"></i>\n                    <h1> {props.city} </h1>\n                </div>\n                <div className=\"crnt_city_temp flex-center\">\n                    <p> {temprature.temp} </p>\n                </div>\n                <div className=\"forecast_data flex\">\n                    {foreCastData !=null && foreCastData.map((elem, index)=>{\n                        return(\n                            <>\n                                <div className=\"hourly_data\">\n                                    <p key={index}> {elem.temp} {hours} </p>\n                                </div>\n                            </>\n                        )\n                    })}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default WeatherData;"]},"metadata":{},"sourceType":"module"}