{"ast":null,"code":"var _jsxFileName = \"/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/WeatherData.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./sass/main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherData = props => {\n  _s();\n\n  const [searchedCity, setSearchedCity] = useState(props.city);\n  const [crntCityLat, setCrntCityLat] = useState(0);\n  const [crntCityLon, setCrntCityLon] = useState(0);\n  const [temprature, setTemprature] = useState([]);\n  const [hours, setHours] = useState(new Date().getHours());\n  const [foreCastData, setForeCastData] = useState([]);\n  const [weather, setWeather] = useState(); // const weath_map = () =>{\n  //     console.log(weather);\n  //     document.body.style.backgroundImage = \"url('/public/image/foggy_d.jpeg');\"\n  // }\n\n  useEffect(() => {\n    const callApi = async () => {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${props.city}&units=metric&appid=9e4cdd6c628c4cbdcacc25b6df594009`);\n      const result = await response.json();\n      setSearchedCity(result.name);\n      setTemprature(result.main);\n      setCrntCityLat(result.coord.lat);\n      setCrntCityLon(result.coord.lon);\n      setWeather(result.weather[0].description);\n    };\n\n    callApi();\n  }, [props]);\n  useEffect(() => {\n    const callForcastApi = async () => {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${crntCityLat}&lon=${crntCityLon}&units=metric&appid=9e4cdd6c628c4cbdcacc25b6df594009`);\n      const result = await response.json();\n      setForeCastData(result.hourly);\n    };\n\n    callForcastApi(); // weath_map();\n  }, [crntCityLat, crntCityLon]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"citi_info_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crnt_city_temp flex-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", parseInt(temprature.temp), \"\\xB0 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crnt_city_weather\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", weather, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast_data flex\",\n        children: [foreCastData != null && foreCastData.map((elem, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hourly_data flex-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fc_d\",\n                children: [parseInt(elem.temp), \"\\xB0\"]\n              }, index + 1, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fc_d\",\n                children: parseInt(hours)\n              }, index + 2, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)\n          }, void 0, false);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_footer\",\n          children: \" *48 hours forecast \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(WeatherData, \"aN4RF8QGw3x0Eyyg/UWV4ZLpQLo=\");\n\n_c = WeatherData;\nexport default WeatherData;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherData\");","map":{"version":3,"sources":["/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/WeatherData.jsx"],"names":["React","useEffect","useState","WeatherData","props","searchedCity","setSearchedCity","city","crntCityLat","setCrntCityLat","crntCityLon","setCrntCityLon","temprature","setTemprature","hours","setHours","Date","getHours","foreCastData","setForeCastData","weather","setWeather","callApi","response","fetch","result","json","name","main","coord","lat","lon","description","callForcastApi","hourly","parseInt","temp","map","elem","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./sass/main.css\";\n\nconst WeatherData  = (props) =>\n{\n    const [searchedCity, setSearchedCity] = useState(props.city);\n    const [crntCityLat , setCrntCityLat] = useState(0);\n    const [crntCityLon , setCrntCityLon] = useState(0);\n    const [temprature, setTemprature] = useState([]);\n    const [hours , setHours] = useState(new Date().getHours());\n    const [foreCastData, setForeCastData] = useState([]);\n    const [weather , setWeather] = useState();\n\n    // const weath_map = () =>{\n    //     console.log(weather);\n    //     document.body.style.backgroundImage = \"url('/public/image/foggy_d.jpeg');\"\n    // }\n\n    useEffect(()=>{\n        const callApi = async ()=>{\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${props.city}&units=metric&appid=9e4cdd6c628c4cbdcacc25b6df594009`);\n            const result = await response.json();\n            setSearchedCity(result.name);\n            setTemprature(result.main);\n            setCrntCityLat(result.coord.lat);\n            setCrntCityLon(result.coord.lon);\n            setWeather(result.weather[0].description);\n        }\n        callApi();\n    },[props]);\n\n\n    useEffect(()=>{\n        const callForcastApi = async () => {\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${crntCityLat}&lon=${crntCityLon}&units=metric&appid=9e4cdd6c628c4cbdcacc25b6df594009`)\n            const result = await response.json();\n            setForeCastData(result.hourly);\n        }\n        callForcastApi();\n        // weath_map();\n    },[crntCityLat,crntCityLon]);\n\n\n\n    return(\n        <>\n            <div className=\"citi_info_wrapper\">\n                {/* <div className=\"crnt_city flex-center\">\n                        <i className=\"fa-solid fa-location-dot\"></i>\n                        <h1> {searchedCity} </h1>\n                </div> */}\n                <div className=\"crnt_city_temp flex-center\">\n                    <p> {parseInt(temprature.temp)}Â° </p>\n                </div>\n                <div className=\"crnt_city_weather\">\n                    <p> {weather} </p>\n                </div>\n                <div className=\"forecast_data flex\">\n                    {foreCastData !=null && foreCastData.map((elem, index)=>{\n                        return(\n                            <>\n                                <div className=\"hourly_data flex-center\" key={index}> \n                                    <div className=\"fc_d\" key={index+1}>{parseInt(elem.temp)}Â°</div> \n                                    <div className=\"fc_d\" key={index+2}>{parseInt(hours)}</div> \n                                </div>\n                            </>\n                        )\n                    })}\n                    <div className=\"forecast_footer\"> *48 hours forecast </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default WeatherData;"]},"metadata":{},"sourceType":"module"}