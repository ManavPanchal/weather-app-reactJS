{"ast":null,"code":"var _jsxFileName = \"/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/WeatherData.jsx\",\n    _s = $RefreshSig$();\n\nimport { positions } from \"@mui/system\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./weather.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherData = () => {\n  _s();\n\n  const [latitude, setLatitude] = useState();\n  const [longitude, setLongitude] = useState();\n  const llApiUrl = `https://api.ambeedata.com/weather/latest/by-lat-lng?lat=${latitude}&lng=${longitude}`;\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(positions => {\n      setLatitude(positions.coords.latitude);\n      setLongitude(positions.coords.longitude);\n    });\n  }, []);\n  useEffect(() => {}, [latitude, longitude]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"citi_info_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crnt_city flex-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-location-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Location \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crnt_city_temp flex-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" crnt Temp \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(WeatherData, \"mSISLNNca14COF7GcRAiypF/ytg=\");\n\n_c = WeatherData;\nexport default WeatherData;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherData\");","map":{"version":3,"sources":["/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/WeatherData.jsx"],"names":["positions","React","useEffect","useState","WeatherData","latitude","setLatitude","longitude","setLongitude","llApiUrl","navigator","geolocation","getCurrentPosition","coords"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAQ,gBAAR;;;;AAEA,MAAMC,WAAW,GAAI,MACrB;AAAA;;AACI,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,EAAxC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,EAA1C;AACA,QAAMM,QAAQ,GAAI,2DAA0DJ,QAAS,QAAOE,SAAU,EAAtG;AACAL,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CZ,SAAD,IAAa;AAClDM,MAAAA,WAAW,CAACN,SAAS,CAACa,MAAV,CAAiBR,QAAlB,CAAX;AACAG,MAAAA,YAAY,CAACR,SAAS,CAACa,MAAV,CAAiBN,SAAlB,CAAZ;AACH,KAHD;AAIH,GALQ,EAKP,EALO,CAAT;AAMAL,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEP,CAACG,QAAD,EAAUE,SAAV,CAFO,CAAT;AAGA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaH,CA3BD;;GAAMH,W;;KAAAA,W;AA6BN,eAAeA,WAAf","sourcesContent":["import { positions } from \"@mui/system\";\nimport React, { useEffect, useState } from \"react\";\nimport  \"./weather.scss\";\n\nconst WeatherData  = () =>\n{\n    const [latitude ,setLatitude] = useState();\n    const [longitude, setLongitude] = useState();\n    const llApiUrl = `https://api.ambeedata.com/weather/latest/by-lat-lng?lat=${latitude}&lng=${longitude}` ; \n    useEffect(()=>{\n        navigator.geolocation.getCurrentPosition((positions)=>{\n            setLatitude(positions.coords.latitude);\n            setLongitude(positions.coords.longitude);\n        })\n    },[])\n    useEffect(()=>{\n\n    },[latitude,longitude])\n    return(\n        <>\n            <div className=\"citi_info_wrapper\">\n                <div className=\"crnt_city flex-center\">\n                    <i className=\"fa-solid fa-location-dot\"></i>\n                    <h1> Location </h1>\n                </div>\n                <div className=\"crnt_city_temp flex-center\">\n                    <p> crnt Temp </p>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default WeatherData;"]},"metadata":{},"sourceType":"module"}