{"ast":null,"code":"import _asyncToGenerator from\"/Users/manavpanchal/Downloads/codes/reactJs/weather_app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/manavpanchal/Downloads/codes/reactJs/weather_app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/manavpanchal/Downloads/codes/reactJs/weather_app/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from\"react\";import\"./sass/main.css\";import WeatherData from\"./WeatherData\";import{SuggestionFilter}from\"./sugestionFilter\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Weather=function Weather(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),latitude=_useState4[0],setLatitude=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),longitude=_useState6[0],setLongitude=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),cityName=_useState8[0],setCityName=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),suggestions=_useState10[0],setSuggestions=_useState10[1];var llApiUrl=\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(latitude,\"&lon=\").concat(longitude);var ApiId='9e4cdd6c628c4cbdcacc25b6df594009';var getValue=function getValue(event){setInput(event.target.value);setSuggestions(SuggestionFilter(event.target.value));if(event.target.value=\"\")setSuggestions([]);};useEffect(function(){navigator.geolocation.getCurrentPosition(function(positions){setLatitude(positions.coords.latitude);setLongitude(positions.coords.longitude);});},[]);useEffect(function(){if(latitude!=null){getllApi();}},[latitude,longitude]);var t_sugg=0;var getllApi=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var get,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(llApiUrl,\"&appid=\").concat(ApiId));case 2:get=_context.sent;_context.next=5;return get.json();case 5:res=_context.sent;// const searchcity = (name) =>{\n//     setInput(name)\n// }\nif(res!=null){setInput(\"searching for Location...\");setInput(res.name);setCityName(res.name);}case 7:case\"end\":return _context.stop();}}},_callee);}));return function getllApi(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container_wrapper flex\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search_wrapper flex\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"search_bar_wrapper flex-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"search_bar\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter City Name\",onChange:getValue,value:input}),/*#__PURE__*/_jsxs(\"button\",{className:\"client_location_btn\",onClick:function onClick(){latitude==null?alert(\"please enable share location to get current location\"):getllApi();},children:[\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-location-crosshairs\"}),\" \"]}),/*#__PURE__*/_jsx(\"div\",{className:\"suggestion_section\",children:input!=\"\"&&suggestions.map(function(elem,index){if(t_sugg<4){t_sugg++;return/*#__PURE__*/_jsxs(\"p\",{className:\"suggestions\",onClick:function onClick(){setInput(\"\".concat(elem.name,\", \").concat(elem.state));setCityName(elem.name);setSuggestions([]);},children:[elem.name,\", \",elem.state]},index);}})})]})}),/*#__PURE__*/_jsxs(\"button\",{className:\"search_btn flex-center\",onClick:function onClick(){return setCityName(input);},children:[\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-magnifying-glass-location\"}),\" \",/*#__PURE__*/_jsx(\"p\",{className:\"search_txt\",children:\"search\"})]})]}),cityName!==\"\"?/*#__PURE__*/_jsx(\"div\",{className:\"main_wrapper flex-center\",children:/*#__PURE__*/_jsx(WeatherData,{city:cityName})}):/*#__PURE__*/_jsx(\"div\",{className:\"main_wrapper flex-center\",children:/*#__PURE__*/_jsx(\"p\",{className:\"no_data\",children:\" No Data is Available For The City\"})})]})});};export default Weather;","map":{"version":3,"sources":["/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/Weather.js"],"names":["React","useState","useEffect","WeatherData","SuggestionFilter","Weather","input","setInput","latitude","setLatitude","longitude","setLongitude","cityName","setCityName","suggestions","setSuggestions","llApiUrl","ApiId","getValue","event","target","value","navigator","geolocation","getCurrentPosition","positions","coords","getllApi","t_sugg","fetch","get","json","res","name","alert","map","elem","index","state"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./sass/main.css\";\nimport WeatherData from \"./WeatherData\";\nimport { SuggestionFilter } from \"./sugestionFilter\";\n\nconst Weather =() =>{\n    \n    const [input , setInput] = useState(\"\");\n    const [latitude , setLatitude] = useState(null);\n    const [longitude, setLongitude] = useState(null);\n    const [cityName , setCityName] = useState(\"\");\n    const [suggestions, setSuggestions] = useState([]);\n    \n    const llApiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}`\n    const ApiId = '9e4cdd6c628c4cbdcacc25b6df594009';\n    \n    const getValue = (event) =>{\n        setInput(event.target.value);\n        setSuggestions(SuggestionFilter(event.target.value));\n        if(event.target.value = \"\") setSuggestions([]);\n    }\n    useEffect(()=>{\n        navigator.geolocation.getCurrentPosition((positions)=>{\n            setLatitude(positions.coords.latitude);\n            setLongitude(positions.coords.longitude);\n        })\n    },[])\n\n    useEffect(()=>{\n        if(latitude != null){\n            getllApi();\n        }\n    },[latitude,longitude])\n    var t_sugg = 0;\n    const getllApi = async ()=>{\n        const get = await fetch(`${llApiUrl}&appid=${ApiId}`);\n        const res = await get.json();\n        // const searchcity = (name) =>{\n        //     setInput(name)\n        // }\n        if(res != null){\n            setInput(\"searching for Location...\");\n            setInput(res.name);\n            setCityName(res.name);\n        }\n    }\n    return(\n        <>\n            <div className=\"container_wrapper flex\">\n                <div className=\"search_wrapper flex\">\n                    <div className=\"search_bar_wrapper flex-center\">\n                        <div className=\"search_bar\">\n                            <input \n                                type=\"text\"\n                                placeholder=\"Enter City Name\"\n                                onChange={getValue}\n                                value={input}\n                            />\n                            <button className=\"client_location_btn\" onClick={()=>{\n                                latitude == null ? alert(\"please enable share location to get current location\") : getllApi()\n                            }}> <i className=\"fa-solid fa-location-crosshairs\"></i> </button>\n                        <div className=\"suggestion_section\">\n                            {input != \"\" && suggestions.map((elem,index) =>{\n                                    if(t_sugg < 4){\n                                    t_sugg++;\n                                    return(\n                                        <p className=\"suggestions\" key={index} onClick={()=>{\n                                            setInput(`${elem.name}, ${elem.state}`)\n                                            setCityName(elem.name);\n                                            setSuggestions([]);\n                                        }}>{elem.name}, {elem.state}</p>\n                                    )\n                                    }\n\n                            })}\n                        </div>\n                        </div>\n                    </div>\n                        <button className=\"search_btn flex-center\" onClick={()=> setCityName(input)}> <i className=\"fa-solid fa-magnifying-glass-location\"></i> <p className=\"search_txt\">search</p></button>\n                </div>\n                { cityName !== \"\" ? (\n                    <div className=\"main_wrapper flex-center\">\n                        <WeatherData city={cityName} />\n                    </div>\n                ):(\n                    <div className=\"main_wrapper flex-center\">\n                        <p className=\"no_data\"> No Data is Available For The City</p>\n                    </div>\n                )}\n            </div>\n        </>\n    )\n}\nexport default Weather;\n\n"]},"metadata":{},"sourceType":"module"}