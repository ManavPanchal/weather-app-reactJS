{"ast":null,"code":"var _jsxFileName = \"/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/WeatherForecast.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherForecast = props => {\n  var hours = new Date().getHours() + props.count;\n  if (hours >= 24) hours = hours % 24;\n\n  if (hours == new Date().getHours()) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hourly_data flex-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fc_d\",\n          children: [parseInt(props.temp), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fc_d\",\n          children: \"NOW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else if (hours < 10) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hourly_data flex-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fc_d\",\n          children: [parseInt(props.temp), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fc_d\",\n          children: [\"0\", hours]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hourly_data flex-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fc_d\",\n          children: [parseInt(props.temp), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fc_d\",\n          children: hours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c = WeatherForecast;\nexport default WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/manavpanchal/Downloads/codes/reactJs/weather_app/src/components/WeatherForecast.jsx"],"names":["WeatherForecast","props","hours","Date","getHours","count","parseInt","temp"],"mappings":";;;;AAAA,MAAMA,eAAe,GAAIC,KAAD,IAAU;AAC9B,MAAIC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,QAAX,KAAuBH,KAAK,CAACI,KAAzC;AACA,MAAGH,KAAK,IAAI,EAAZ,EAAgBA,KAAK,GAAGA,KAAK,GAAC,EAAd;;AAChB,MAAGA,KAAK,IAAI,IAAIC,IAAJ,GAAWC,QAAX,EAAZ,EAAkC;AAC9B,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,qBAAuBE,QAAQ,CAACL,KAAK,CAACM,IAAP,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAQH,GATD,MAUK,IAAGL,KAAK,GAAC,EAAT,EAAY;AACb,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,qBAAuBI,QAAQ,CAACL,KAAK,CAACM,IAAP,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,0BAAwBL,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAQH,GATI,MASA;AACD,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,qBAAuBI,QAAQ,CAACL,KAAK,CAACM,IAAP,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBL;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAQH;AACJ,CAhCD;;KAAMF,e;AAkCN,eAAeA,eAAf","sourcesContent":["const WeatherForecast = (props) =>{\n    var hours = new Date().getHours()+ props.count;\n    if(hours >= 24) hours = hours%24;\n    if(hours == new Date().getHours()){\n        return(\n            <>\n                <div className=\"hourly_data flex-center\"> \n                    <div className=\"fc_d\">{parseInt(props.temp)}°</div> \n                    <div className=\"fc_d\">NOW</div> \n                </div>\n            </>\n        )\n    }\n    else if(hours<10){\n        return(\n            <>\n                <div className=\"hourly_data flex-center\"> \n                    <div className=\"fc_d\">{parseInt(props.temp)}°</div> \n                    <div className=\"fc_d\">0{hours}</div> \n                </div>\n            </>\n        )\n    }else{\n        return(\n            <>\n                <div className=\"hourly_data flex-center\"> \n                    <div className=\"fc_d\">{parseInt(props.temp)}°</div> \n                    <div className=\"fc_d\">{hours}</div> \n                </div>\n            </>\n        )\n    }\n}\n\nexport default WeatherForecast;"]},"metadata":{},"sourceType":"module"}